[{"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\index.js":"1","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\App.js":"2","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\NavBar.js":"3","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\BlogsPage.js":"4","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\LogIn.js":"5","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\PostPage.js":"6","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\BlogList.js":"7","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\PostTeaser.js":"8","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\NewPost.js":"9","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\PostForm.js":"10","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\Comments.js":"11","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\ListComments.js":"12"},{"size":196,"mtime":1606852900592,"results":"13","hashOfConfig":"14"},{"size":1985,"mtime":1606956778255,"results":"15","hashOfConfig":"14"},{"size":670,"mtime":1606880164207,"results":"16","hashOfConfig":"14"},{"size":1367,"mtime":1606957191559,"results":"17","hashOfConfig":"14"},{"size":1609,"mtime":1606956008465,"results":"18","hashOfConfig":"14"},{"size":2218,"mtime":1606958578175,"results":"19","hashOfConfig":"14"},{"size":585,"mtime":1606873111907,"results":"20","hashOfConfig":"14"},{"size":1244,"mtime":1606958598108,"results":"21","hashOfConfig":"14"},{"size":1386,"mtime":1606958543043,"results":"22","hashOfConfig":"14"},{"size":682,"mtime":1606952751573,"results":"23","hashOfConfig":"14"},{"size":1077,"mtime":1606958488284,"results":"24","hashOfConfig":"14"},{"size":1254,"mtime":1606958510464,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pi62dc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\index.js",[],["54","55"],"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\App.js",["56"],"import React, { useState, useEffect } from 'react';\nimport NavBar from './components/NavBar';\nimport BlogsPage from './components/BlogsPage';\nimport LogIn from './components/LogIn';\nimport PostPage from './components/PostPage';\nimport NewPost from './components/NewPost';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  const [posts, setPosts] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  // useEffect(() => {\n  //   const hyphenate = (str) => {\n  //     return str.toLowerCase().split(' ').join('-')\n  //   };\n  \n  //   const addHyphenTitle = (arr) => {\n  //     arr.forEach((obj) => {\n  //       obj.hyphenTitle = hyphenate(obj.title)\n  //     })\n  //   };\n\n  //   const getPosts = async () => {\n  //     try {\n  //       //set isLoading to true?\n  //       const response = await fetch('http://localhost:3000/blog/all', {method: 'GET', mode: 'cors'})\n  //       const data = await response.json()\n  //       addHyphenTitle(data)\n  //       setPosts(data.reverse())\n  //       setIsLoading(false)\n  //     } catch (err) {\n  //       console.log(err)\n  //     }\n  //   };\n  //   getPosts()\n  // }, [isLoading]);\n\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <Switch>\n          <Route path='/new'>\n            <NewPost setIsLoading={setIsLoading} />\n          </Route>\n          <Route path='/blog/:hyphenTitle' \n            render={() => {\n              return ( isLoading ? <h2>Loading Page</h2> : <PostPage posts={posts} setIsLoading={setIsLoading} />)\n            }}>\n          </Route>\n          <Route path='/blog'>\n            <BlogsPage posts={posts} isLoading={isLoading} setIsLoading={setIsLoading} setPosts={setPosts} />\n          </Route>\n          <Route path='/'>\n            <LogIn loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\NavBar.js",[],"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\BlogsPage.js",["57"],"import React, {useEffect} from 'react';\r\nimport BlogList from './BlogList';\r\n\r\nconst BlogsPage = (props) => {\r\n    const { posts, isLoading, setIsLoading, setPosts } = props;\r\n\r\n    useEffect(() => {\r\n        const hyphenate = (str) => {\r\n          return str.toLowerCase().split(' ').join('-')\r\n        };\r\n      \r\n        const addHyphenTitle = (arr) => {\r\n          arr.forEach((obj) => {\r\n            obj.hyphenTitle = hyphenate(obj.title)\r\n          })\r\n        };\r\n    \r\n        const getPosts = async () => {\r\n            console.log(localStorage.getItem('JWT'))\r\n          try {\r\n            //set isLoading to true?\r\n            const response = await fetch('http://localhost:3000/blog/all', {\r\n                method: 'GET', \r\n                mode: 'cors',\r\n                headers: { Authorization: `JWT ${localStorage.getItem('JWT')}`}\r\n            })\r\n            const data = await response.json()\r\n            console.log(data)\r\n            addHyphenTitle(data)\r\n            setPosts(data.reverse())\r\n            setIsLoading(false)\r\n          } catch (err) {\r\n            console.log(err)\r\n          }\r\n        };\r\n        getPosts()\r\n      }, [isLoading]);\r\n\r\n    return (\r\n        <div>\r\n            {isLoading ? <h2>Loading Blogs</h2> : <BlogList posts={posts} setIsLoading={setIsLoading} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlogsPage;","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\LogIn.js",["58"],"import React, { useState, } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LogIn = (props) => {\r\n    const { loggedIn, setLoggedIn } = props;\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    const logInUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/login`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n            const data = await response.json();\r\n            console.log('response:', data);\r\n            console.log('token:', data.token);\r\n            localStorage.setItem('JWT', data.token);\r\n            setLoggedIn(true)\r\n            history.push(`/blog`);\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Please Log In</h2>\r\n            <form action=\"\">\r\n                <label htmlFor=\"username\">Username</label><br/>\r\n                <input type=\"text\" onChange={(e) => setUsername(e.target.value)} required /><br/>\r\n                <label htmlFor=\"password\">Password</label><br/>\r\n                <input type=\"password\" onChange={(e) => setPassword(e.target.value)} required /><br/>\r\n                <button onClick={logInUser} >Log In</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogIn;","C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\PostPage.js",[],"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\BlogList.js",[],"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\PostTeaser.js",[],"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\NewPost.js",[],"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\PostForm.js",[],"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\Comments.js",[],"C:\\Users\\mrhaf\\Desktop\\the_odin_project\\blog-admin\\src\\components\\ListComments.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"68","line":37,"column":10,"nodeType":"69","endLine":37,"endColumn":21,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":5,"column":13,"nodeType":"65","messageId":"66","endLine":5,"endColumn":21},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setIsLoading' and 'setPosts'. Either include them or remove the dependency array.","ArrayExpression",["74"],"'loggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [isLoading, setIsLoading, setPosts]",{"range":"77","text":"78"},[1160,1171],"[isLoading, setIsLoading, setPosts]"]